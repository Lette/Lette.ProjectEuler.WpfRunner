<Window
    x:Class="Lette.ProjectEuler.WpfRunner.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:ts="clr-namespace:Lette.ProjectEuler.WpfRunner.View"
    Title="Project Euler Solutions"
    Height="750"
    Width="500"
    MinWidth="340"
    WindowStartupLocation="CenterScreen"
    Icon="projecteuler.ico"
    Foreground="White"
    Background="{DynamicResource BackgroundBrush}">

    <Window.Resources>
        <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0 1">
            <GradientStop Color="#FF303060" Offset="0.0" />
            <GradientStop Color="#FFFFFFFF" Offset="1.0" />
        </LinearGradientBrush>

        <Color x:Key="RegularItemBackgroundColor" A="#FF" R="#30" G="#30" B="#60" />
        <Color x:Key="ErrorItemBackgroundColor" A="#FF" R="#FF" G="#30" B="#30" />
        <Color x:Key="SolvedItemBackgroundColor" A="#FF" R="#10" G="#99" B="#10" />
        <Color x:Key="SelectedItemBackgroundColor" A="#FF" R="#C0" G="#30" B="#60" />
        <Color x:Key="CanceledItemBackgroundColor" A="#FF" R="#70" G="#70" B="#80" />

        <SolidColorBrush x:Key="RegularItemBrush" Color="{StaticResource RegularItemBackgroundColor}" />
        <SolidColorBrush x:Key="ErrorItemBrush" Color="{StaticResource ErrorItemBackgroundColor}" />
        <SolidColorBrush x:Key="SolvedItemBrush" Color="{StaticResource SolvedItemBackgroundColor}" />
        <SolidColorBrush x:Key="SelectedItemBrush" Color="{StaticResource SelectedItemBackgroundColor}" />
        <SolidColorBrush x:Key="CanceledItemBrush" Color="{StaticResource CanceledItemBackgroundColor}" />

        <Style TargetType="Button">
            <Setter Property="Background" Value="{StaticResource RegularItemBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Width" Value="96" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SelectedItemBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate DataType="{x:Type ts:ProblemViewModel}">
            <Border Margin="6 2" BorderBrush="White" BorderThickness="1" CornerRadius="8">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="{StaticResource RegularItemBrush}"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsCanceled}" Value="True">
                                <Setter Property="Background" Value="{StaticResource CanceledItemBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsCorrect}" Value="True">
                                <Setter Property="Background" Value="{StaticResource SolvedItemBrush}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsWrong}" Value="True">
                                <Setter Property="Background" Value="{StaticResource ErrorItemBrush}" />
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectedItemBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" SharedSizeGroup="NumberColumn" />
                        <ColumnDefinition Width="auto" SharedSizeGroup="TimeColumn" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" SharedSizeGroup="AnswerColumn" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Margin="4 0" Text="{Binding Number}" />
                    <TextBlock Grid.Column="1" Margin="4 0" Text="{Binding ElapsedTime, StringFormat='{}{0} s'}" />

                    <TextBlock Grid.Column="2" Margin="4 0" TextTrimming="WordEllipsis" Width="auto">
                        <Hyperlink
                            Command="{Binding Path=DataContext.OpenWebLinkCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                            CommandParameter="{Binding Link}">
                            <TextBlock Text="{Binding Description}" Foreground="White" TextTrimming="WordEllipsis" />
                        </Hyperlink>
                    </TextBlock>

                    <DockPanel Grid.Column="3" Margin="4 0">
                        <TextBlock TextAlignment="Right" Text="{Binding ProposedAnswer}" />
                    </DockPanel>
                </Grid>

                <Border.Triggers>
                    <EventTrigger RoutedEvent="Border.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <!--<ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedItemBackgroundColor}" />-->
                                <ThicknessAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Margin" To="4 2" />
                                <ThicknessAnimation Duration="0:0:0.1" Storyboard.TargetProperty="Padding" To="4 0" />
                                <ThicknessAnimation Duration="0:0:0.1" Storyboard.TargetProperty="BorderThickness" To="2.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Border.MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <!--<ColorAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Background.Color" To="{StaticResource RegularItemBackgroundColor}" />-->
                                <ThicknessAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Margin" To="6 2" />
                                <ThicknessAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Padding" To="0 0" />
                                <ThicknessAnimation Duration="0:0:0.5" Storyboard.TargetProperty="BorderThickness" To="1.0" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Border.Triggers>
            </Border>

        </DataTemplate>

        <CollectionViewSource x:Key="SortedSolutions" Source="{Binding Solutions}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Number" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl
                Grid.IsSharedSizeScope="True"
                BorderThickness="0"
                HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding Source={StaticResource SortedSolutions}}" />
        </ScrollViewer>

        <Rectangle Margin="0" Grid.Row="1" Height="5" Fill="{StaticResource RegularItemBrush}" Width="auto" />

        <ProgressBar
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            Margin="3"
            Height="24"
            Minimum="0"
            Maximum="{Binding AllProblemsCount}"
            Value="{Binding Solutions.Count, Mode=OneWay}">

            <ProgressBar.Style>
                <Style TargetType="ProgressBar">
                    <Setter Property="Foreground" Value="ForestGreen" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShouldStop}" Value="True">
                            <DataTrigger.Setters>
                                <Setter Property="Foreground" Value="Red" />
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Style>
        </ProgressBar>

        <Rectangle Margin="0" Grid.Row="3" Height="5" Fill="{StaticResource RegularItemBrush}" Width="auto" />

        <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right">
            <CheckBox IsChecked="{Binding RunParallel}" VerticalAlignment="Center">Run parallel</CheckBox>
            <Button Content="Start" IsDefault="True" Command="{Binding StartCommand}" />
            <Button Content="Stop" Command="{Binding StopCommand}" />
            <Button Content="Quit" IsCancel="True" Command="{Binding QuitCommand}" />
        </StackPanel>
    </Grid>
</Window>